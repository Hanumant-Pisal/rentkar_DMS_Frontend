import { User } from "../types";export const setToken = (token: string) => {  if (typeof window !== 'undefined') {    localStorage.setItem("token", token);    sessionStorage.setItem('isAuthenticated', 'true');  }};export const getToken = (): string | null => {  if (typeof window !== 'undefined') {    return localStorage.getItem("token");  }  return null;};export const removeToken = () => {  if (typeof window !== 'undefined') {    localStorage.removeItem("token");    sessionStorage.removeItem('isAuthenticated');  }};export const setUser = (user: User) => {  if (typeof window !== 'undefined') {    localStorage.setItem("user", JSON.stringify(user));  }};export const getUser = (): User | null => {  if (typeof window !== 'undefined') {    const data = localStorage.getItem("user");    try {      return data ? JSON.parse(data) : null;    } catch (e) {      console.error("Error parsing user data:", e);      return null;    }  }  return null;};export const removeUser = () => {  if (typeof window !== 'undefined') {    localStorage.removeItem("user");  }};export const isAuthenticated = (): boolean => {  if (typeof window === 'undefined') return false;  const token = getToken();  return !!token;};